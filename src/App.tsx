import * as React from 'react';
import './App.css';
import * as moment from 'moment';

import TextInput from './components/TextInput';
import NotesList from './components/NotesList';
import Date from './components/Date';

interface AppState {
  notes: NoteElement[];
  activeId: number;
}

export interface NoteElement {
  title: string;
  text: string;
  date: moment.Moment; // –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
}

class App extends React.Component<any, AppState> {

  constructor(props: any) {
    super(props);
    this.state = {
      notes: [
        {
          date: moment('2016-03-01', 'YYYY-MM-DD'),
          text: '–û–¥–Ω–∞–∫–æ, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å —Ç–µ–º, —á—Ç–æ –ø–∞—Ä–∞–¥–∏–≥–º–∞ –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å. –û–Ω—Ç–æ–≥–µ–Ω–µ–∑ —Ä–µ—á–∏ –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–Ω—Ç–æ–≥–µ–Ω–µ–∑ —Ä–µ—á–∏. –ê–∫—Ü–µ–Ω—Ç—É–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—É–∂–¥–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä–≥–µ–Ω—Ç–Ω—ã–π —Ç–µ—Å—Ç.',
          title: '–ü–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞'
        },
        {
          date: moment('2018-01-18', 'YYYY-MM-DD'),
          text: '–¢–µ–∫—Å—Ç –≤—Ç–æ—Ä–æ–π –∑–∞–º–µ—Ç–∫–∏',
          title: '–í—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞ —Å –¥–ª–∏–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è'
        },
        {
          date: moment('2018-01-25', 'YYYY-MM-DD'),
          text: '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –∞–Ω–Ω–∏–≥–∏–ª–∏—Ä—É–µ—Ç —Å—É–±–ª–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑. –°—Ç–∏–º—É–ª –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –∫–æ–Ω—Ñ–æ—Ä–º–∏–∑–º. –ü—Å–∏—Ö–∏—á–µ—Å–∫–∞—è —Å–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏—è –ø–æ–Ω–∏–º–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –≥–æ–º–µ–æ—Å—Ç–∞–∑. –î–µ–π—Å—Ç–≤–∏–µ, –∫–æ–Ω–µ—á–Ω–æ, –ø—Ä–æ—Å–≤–µ—Ç–ª—è–µ—Ç —Å—Ç—Ä–∞—Ö, –∏ —ç—Ç–æ –Ω–µ—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ —Ä–µ—á—å –æ –ø–µ—Ä—Å–æ–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π —Å–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.',
          title: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π —ç—Å–∫–∞–ø–∏–∑–º –≤ XXI –≤–µ–∫–µ'
        },
      ],
      activeId: -1
    };
  }

  /** –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ */
  onAddNote = (note: NoteElement) => {
    this.setState({
      notes: [...this.state.notes, note],
      activeId: this.state.notes.length
    });
  }
  
  /** –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–º–µ—Ç–∫—É */
  onOpenNote = (id: number) => {
    this.setState({
      activeId: id
    });
  }

  /** –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞  */
  onRemoveNote = () => {
    if (this.state.activeId !== -1) {
      const activeNote: HTMLLIElement | null = document.querySelector('.note--active') as HTMLLIElement;
      if (activeNote !== null) {
        activeNote.classList.remove('note--active');
      }
      this.setState(prevState => ({
        notes: [...prevState.notes.slice(0, prevState.activeId), ...prevState.notes.slice(prevState.activeId + 1)],
        activeId: -1,
      }));
    }
  }

  render() {
    return (
      <div className="App">
        <NotesList
          notes={this.state.notes}
          onOpenNote={this.onOpenNote}
          onAdd={this.onAddNote}
        />

        <div className="edit-note"> 
          <header>
            <Date notes={this.state.notes} activeId={this.state.activeId}/>
            <button type="button" onClick={this.onRemoveNote}>üóëÔ∏è</button>
          </header>
          <TextInput
            notes={this.state.notes}
            activeId={this.state.activeId}
          />
        </div>

      </div>
    );
  }
}

export default App;
